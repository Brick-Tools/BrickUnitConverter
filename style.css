:root {
  --background-color: 0,0,0;
  --text-color: white;

  --primary-color: 0,123,255;
  e: rgb(0,123,255);

  --highlight-color: 0, 255, 0;
  e: rgb(0, 255, 0);

  --secondary-color: 44, 48, 62;
  e: rgb(44, 48, 62);

  --outline-color: 128, 128, 128;
  e: rgb(128, 128, 128);
}

html {
  height: 100%;
  width: 100%;
  background-color: rgba(var(--background-color),.95);
  
  background-image: url("images/wallpaperDarkA2x.webp");
  background-size: cover;
  
  color: var(--text-color);
  /* text-align: center; */
  text-align: left;
  font-family: 'Roboto Mono', monospace;
}
body {
  margin: 0;
}

.inlineGrid {
  display: grid;
  grid-template-columns: minmax(6em, 1fr) minmax(8em, 1.6fr);
}

.blur {
  backdrop-filter: blur(.5rem);
  pointer-events: none;
  z-index: 2;
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
}
.hidden {
  opacity: 0;
}

.inline {
  display: flex;
  justify-self: center;
  align-items: center;
  /* justify-content: space-between; */
}
.inline > :nth-last-child(1) {
  margin-left: 2em;
  padding-left: 2em;
  border-left: 1px solid rgb(var(--outline-color));
}
.inline input[type="checkbox"] {
  margin: 0.5em;
}
.inline label {
  width: 5ch;
  margin-right: 0.5em;
  color: var(--text-color);
}
.inline input[type="number"] {
  width: 8ch;
  /* margin-left: 1em; */
  /* background-color: white; */
  color: gray;
}
.inline input[type="number"].active,
.localScaleLabel.active {
  /* background-color: gray; */
  color: var(--text-color);
}
.inline input[type="button"] {
  width: 6em;
  height: 3em;
  color: var(--text-color);
  background-color: rgb(82, 0, 0);
  border: 1px solid rgb(var(--outline-color));
  border-radius: 4px;
  cursor: pointer;
}

/* details */
 details:hover {
  /* cursor: pointer; */
}
summary {
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1em;
  /* font-weight: bold; */
}
summary::after {
  content: '';
  /* width: 0;  */
  /* height: 0;  */
  border-top: 10px solid var(--text-color);
  border-inline: 7px solid transparent;
  /* transition: 0.2s; */
}


/* Style for header */
.header {
  position: sticky;
  top: 0;
  z-index: 2;
  border-bottom: 1px solid rgb(var(--outline-color));
  background-color: rgb(var(--background-color));
  /* transition: filter 314ms ease-in-out 0ms; */
}
.headerInputs {
  width: 80%;
  max-width: 45em;
  margin: 0 auto; /* Center the header horizontally */
  padding: 20px 0;
  display: flex; /* Use flexbox for layout */
  align-items: center; /* Align items vertically */
  justify-content: space-between; /* Space items evenly */
}




/* @media all and (min-width: 481px) and (max-width: 4800px) { */
/* } */


/* MARK: Main columns */
.containerWrapper {
  width: 80%;
  min-width: 16em;
  max-width: 45em;
  margin: 0px auto;
  /* transition: filter 314ms ease-in-out 0ms; */
}
.container {
  position: static;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  /* flex-flow: row wrap; */
  margin: 32px 0px;
  padding: 0.5em;
  border: 1px solid rgb(var(--outline-color));
  border-radius: 8px;
  background-color: rgba(0, 0, 0, 0.8);
  align-items: center;
  /* background-color: rgb(16, 16, 16); */
}
.container > * {
  flex: 1 1 50%;
}
.content {
  flex: 1;
  margin: 2px;
  padding: 0.5em;
}



/* MARK: overlay containers */
.overlayContainer {
  position: static;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  margin: 32px 0px;
  align-items: center;
  justify-content: center;
}
.overlayContent {
  flex: 1;
  margin: 2px;
  padding: 16px;
}



/* MARK: Inputs */
.input-field {
  flex: 1;
  margin: 4px;
}

/* Style for the label in the header */
.edge-label{
  position: absolute;
  top: -4px;
  left: 6px;
  font-size: 10px;
  background-color: rgb(var(--background-color));
  border-radius: 5px;
  padding: 0 5px;
  max-height: 1.2em;
  overflow: hidden; /* Hide any overflowed content */
  user-select: none;
}

#valueInput,
#outputValue,
.input-field,
.labelDiv {
  position: relative;
}

/* Style for input elements */
input[type="number"],
select,
input[type="text"] {
  padding: 8px;
  margin-bottom: 10px;
  border: 1px solid rgb(var(--outline-color));
  border-radius: 4px;
  box-sizing: border-box;
  width: 100%; /* Adjust the width as needed */
  margin: auto;
  background-color: rgb(var(--background-color));
  color: var(--text-color);
  font-family: 'Roboto Mono', monospace; /* Use Roboto Mono as the font */
}

input[type="text"],
input[type="number"] {
  text-align: right;
}

input[type="text"] {
  color: rgb(var(--highlight-color));
}

/* Style for input elements on focus */
input[type="number"]:focus,
select:focus,
input[type="text"]:focus {
  outline: none;
  border-color: rgb(var(--highlight-color));
}

input.inputValuePrimary,
input.inputValueSecondary,
input.conversionLabel,
input.headerInput,
input.unitValueIn,
input.unitValueOut {
  border: 1px solid rgb(var(--primary-color));
}

.content input {
  /* min-width: 64px; */
  /* max-width: 10em; */
}

input.conversionLabel {
  width: 133px;
  position: absolute;
  top: 50%;
  left: 0%;
  font-size: 14px;
  /* font-weight:bold; */
  transform: translateX(-50%) translateY(-50%) rotate(-90deg) translateY(-50%) translateY(-8px);
  text-align: center;
  border-radius: 8px;
  color: var(--text-color);
}

/* MARK: Select */
.content select {
  /* min-width: 128px; */
  /* max-width: 20em; */
}

/* Style for select dropdown arrow */
select {
  background-color: rgb(var(--secondary-color));
}


/* MARK: Button */
button[id="newConverter"] {
  border: 1px solid rgb(var(--primary-color));
  background-color: rgb(0, 0, 0, .9);
  width: 50%;
  max-width: 1000px;
  font-size: 2em;
  margin-bottom: 4rem;
}

.btnContainer {
  position: static;
  display: flex;
  justify-content: center;
  /* transition: filter 314ms ease-in-out 0ms; */
}

.duplicateBnt,
.menuBtn {
  padding: 8px 12px;
  margin: 4px;
  border-radius: 4px;
  background-color: rgb(var(--secondary-color));
  color: var(--text-color);
  cursor: pointer;
  border: 1px solid rgb(var(--outline-color));
}

/* Hover effect */
.duplicateBnt:hover,
.menuBtn:hover { 
  background-color: rgb(var(--primary-color));
}

.applyScaleBtn {
  background-color: rgb(var(--background-color));
  border: 1px solid rgb(var(--primary-color));
  border-radius: 4px;
  font-family: inherit;
  color: var(--text-color);
  /* transition: 250ms; */
}

.applyScaleBtn:hover {
  cursor: pointer;
  color: rgb(var(--primary-color));
  font-weight: bolder;
  /* transition: 250ms; */
}





/* MARK: Side Menu */
.sideNav{
  height: 100%;
  width: 0px;
  position: fixed;
  z-index: 10;
  left: 0;
  background-color: rgba(var(--background-color),.8);
  overflow-x: hidden;
  transition: 0.314s;
  padding-top: 20px;
  white-space: nowrap;
}

.sideNav li,
.sideNav a {
  padding: 8px 0px;
  text-decoration: none;
  font-size: 20px;
  color: var(--text-color);
  /* display: block; */
  transition: .314s;
}

.sideNav li:hover {
  padding-left: 1rem;
  color: rgb(var(--primary-color));
  cursor: pointer;
}
.sideNav li:hover a {
  color: rgb(var(--primary-color));
}

.sideNav span{
  position: absolute;
  top: 8px;
  right: 32px;
  font-size: 24px;
  margin-left: 50px;
  cursor: pointer;
  /* transition: .314s; */
  padding: 0em  2em;
  margin:  0em -2em;
}

/* MARK: overlays */
.overlay {
  pointer-events: none;
  position: absolute;
  top: -100%;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
  /* min-width: 20em; */
  max-width: 60em;
  padding: 24px;
  background-color: rgb(var(--background-color));
  border: 1px solid rgb(var(--outline-color));
  border-radius: 16px;
  box-shadow: 0px 2px 5px 5px rgba(0, 0, 0, 0.1);
  margin-top: -25px;
  opacity: 0;
  transition: top 0ms ease-in-out 314ms, opacity 314ms ease-in-out, margin-top 314ms ease-in-out;
}
.overlay h1,
.overlay p {
  /* margin: 0; */
}
.overlay h1 {
  text-align: center;
}
.overlaySettings {
  max-width: 24em;
}
.overlaySettings .input-field {
  margin: 1em auto;
  max-width: 16em;
}
.overlaySettings p {
  text-align: center;
}
.overlayScaleCalc .overlayContainer {
  margin: 1em auto;
  /* max-width: 32em; */
}

.overlayScaleCalc,
.overlayInfo,
.overlaySettings,
.overlayScales {
  z-index: 3;
}

.overlayInfo p {
  padding: 0.25rem;
}
.overlayInfo img {
  width: 100%;
}

body.active-overlayInfo {
  /* overflow: hidden; */
}

body.active-blur .containerWrapper,
body.active-blur .btnContainer {
  /* filter: blur(5px); */
  /* background-color: rgba(0, 0, 0, 0.08); */
  /* transition: filter 314ms ease-in-out 0ms; */
  pointer-events: none;
}

body.active-overlayInfo .overlayInfo,
body.active-overlayScaleCalc .overlayScaleCalc,
body.active-overlaySettings .overlaySettings,
body.active-overlayScales .overlayScales {
  pointer-events: all;
  top: 100px;
  opacity: 1;
  margin-top: 0;
  transition: opacity 314ms ease-in-out, margin-top 314ms ease-in-out;
}

.overlayScales ul {
  list-style-type: circle;
  padding-left: 20px;
}
.overlayScales li {
  margin: 12px;
}



/* MARK: Small Screen */
@media all and (min-width: 0px) and (max-width: 600px) {
  .overlay {
    width: 75%;
    padding: 1em;
  }
  .overlayScales ul {
    padding-left: 0.5em;
  }
}